// Generated by CoffeeScript 1.6.3
(function() {
  var testInfo;

  testInfo = {
    name: 'basic',
    tags: ['e2e']
  };

  require("../common/setup");

  describe("basic browsing " + env.TEST_ENV_DESC, function(done) {
    var allPassed, browser, sync, _ref;
    _ref = {}, browser = _ref.browser, sync = _ref.sync;
    allPassed = true;
    this.timeout(env.TIMEOUT);
    before(function(done) {
      var _ref1;
      _ref1 = wdSync.remote(env.REMOTE_CONFIG), browser = _ref1.browser, sync = _ref1.sync;
      return sync(function() {
        this.init(desiredWithTestInfo(testInfo));
        return done();
      });
    });
    afterEach(function() {
      return allPassed = allPassed && (this.currentTest.state === 'passed');
    });
    after(function(done) {
      return sync(function() {
        this.quit();
        if (env.SAUCE) {
          this.sauceJobStatus(allPassed);
        }
        return done();
      });
    });
    describe("precheck", function() {
      return it("should work", function(done) {
        return sync(function() {
          var caps, sessionId;
          this.status().should.exist;
          sessionId = this.getSessionId();
          sessionId.should.exist;
          caps = this.sessionCapabilities();
          caps.should.exist;
          if (env.DESIRED.browserName != null) {
            caps.browserName.should.exist;
          }
          return done();
        });
      });
    });
    return describe("browse page", function() {
      beforeEach(function(done) {
        return sync(function() {
          this.get("http://saucelabs.com/test/guinea-pig");
          return done();
        });
      });
      it("should have correct title", function(done) {
        return sync(function() {
          this.title().toLowerCase().should.include('sauce labs');
          return done();
        });
      });
      return it("typing in field should work", function(done) {
        return sync(function() {
          var queryField;
          queryField = this.elementById('i_am_a_textbox');
          this.type(queryField, "Hello World");
          this.type(queryField, "\n");
          return done();
        });
      });
    });
  });

}).call(this);
