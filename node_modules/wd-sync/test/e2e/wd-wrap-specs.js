// Generated by CoffeeScript 1.6.3
(function() {
  require("../common/setup");

  describe("wd wrap tests " + env.TEST_ENV_DESC, function() {
    describe("without pre", function() {
      var allPassed, browser, someText, testInfo, wrap;
      testInfo = {
        name: 'wd wrap without pre',
        tags: ['e2e']
      };
      this.timeout(env.TIMEOUT);
      someText = null;
      browser = {}.browser;
      allPassed = true;
      wrap = wdSync.wrap({
        "with": function() {
          return browser;
        }
      });
      before(function() {
        var _ref;
        return _ref = wdSync.remote(env.REMOTE_CONFIG), browser = _ref.browser, _ref;
      });
      before(wrap(function() {
        return this.init(desiredWithTestInfo(testInfo));
      }));
      afterEach(function() {
        return allPassed = allPassed && (this.currentTest.state === 'passed');
      });
      after(wrap(function() {
        this.quit();
        if (env.SAUCE) {
          return this.sauceJobStatus(allPassed);
        }
      }));
      return describe("browsing page", function() {
        beforeEach(wrap(function() {
          return this.get("http://saucelabs.com/test/guinea-pig");
        }));
        it("should get title", wrap(function() {
          return this.title().toLowerCase().should.include('sauce labs');
        }));
        return it("should be able to type in field", wrap(function() {
          var queryField;
          queryField = this.elementById('i_am_a_textbox');
          this.type(queryField, "Hello World");
          return this.type(queryField, "\n");
        }));
      });
    });
    return describe("with pre", function() {
      var allPassed, browser, someText, testInfo, wrap;
      testInfo = {
        name: 'wd wrap with pre',
        tags: ['e2e']
      };
      someText = null;
      browser = {}.browser;
      allPassed = true;
      wrap = wdSync.wrap({
        pre: function() {
          this.timeout(env.TIMEOUT);
          return someText = 'Test2';
        },
        "with": function() {
          return browser;
        }
      });
      before(function() {
        var _ref;
        return _ref = wdSync.remote(env.REMOTE_CONFIG), browser = _ref.browser, _ref;
      });
      before(wrap(function() {
        return this.init(desiredWithTestInfo(testInfo));
      }));
      afterEach(function() {
        return allPassed = allPassed && (this.currentTest.state === 'passed');
      });
      after(wrap(function() {
        this.quit();
        if (env.SAUCE) {
          return this.sauceJobStatus(allPassed);
        }
      }));
      it("should have run pre", wrap(function() {
        return someText.should.equal('Test2');
      }));
      return describe("browsing page", function() {
        beforeEach(wrap({
          pre: function() {
            return this.timeout(env.TIMEOUT / 2);
          }
        }, function() {
          return this.get("http://saucelabs.com/test/guinea-pig");
        }));
        it("should get title", wrap(function() {
          return this.title().toLowerCase().should.include('sauce labs');
        }));
        return it("should be able to type in field", wrap(function() {
          var queryField;
          queryField = this.elementById('i_am_a_textbox');
          this.type(queryField, "Hello World");
          return this.type(queryField, "\n");
        }));
      });
    });
  });

}).call(this);
